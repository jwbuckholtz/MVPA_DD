config = {
    'study': {
        'name': 'Delay Discounting MVPA Analysis',
        'description': 'Stanford Delay Discounting fMRI Analysis',
        'version': '1.0',
        'pi': 'Russell Poldrack',
        'contact': 'your_email@stanford.edu',
    },
    'paths': {
        'data_root': '/oak/stanford/groups/russpold/data/uh2/aim1',
        'fmriprep_dir': '/oak/stanford/groups/russpold/data/uh2/aim1/derivatives/fmriprep',
        'behavior_dir': '/oak/stanford/groups/russpold/data/uh2/aim1/behavioral_data/event_files',
        'output_root': '/oak/stanford/groups/russpold/data/uh2/aim1/derivatives/mvpa_analysis',
        'output_dir': '/oak/stanford/groups/russpold/data/uh2/aim1/derivatives/mvpa_analysis/delay_discounting_results',
        'behavioral_output': 'behavioral_analysis',
        'mvpa_output': 'mvpa_analysis',
        'geometry_output': 'geometry_analysis',
        'dd_geometry_output': 'dd_geometry_results',
        'cache_dir': '/oak/stanford/groups/russpold/data/uh2/aim1/derivatives/mvpa_analysis/analysis_cache',
        'log_dir': './logs',
        'task_name': 'discountFix',
        'bold_func_glob': 'ses*/func/',
        'bold_data_suffix': '*preproc_bold.nii.gz',
        'masks_dir': '/oak/stanford/groups/russpold/data/uh2/aim1/derivatives/masks',
        'core_mask_files': {
            'striatum': 'striatum_mask.nii.gz',
            'dlpfc': 'dlpfc_mask.nii.gz',
            'vmpfc': 'vmpfc_mask.nii.gz',
        },
        'optional_mask_files': {
            'left_striatum': 'left_striatum_mask.nii.gz',
            'right_striatum': 'right_striatum_mask.nii.gz',
            'left_dlpfc': 'left_dlpfc_mask.nii.gz',
            'right_dlpfc': 'right_dlpfc_mask.nii.gz',
            'acc': 'acc_mask.nii.gz',
            'ofc': 'ofc_mask.nii.gz',
        },
    },
    'fmri': {
        'tr': 0.68,
        'hemi_lag': 0,
        'smoothing_fwhm': 6.0,
        'high_pass_filter': 0.01,
        'standardize': True,
        'detrend': True,
        'confound_strategy': 'auto',
        'slice_time_ref': 0.5,
    },
    'behavioral': {
        'min_accuracy': 0.6,
        'max_rt': 10.0,
        'min_rt': 0.1,
        'discount_model': 'hyperbolic',
        'fit_method': 'least_squares',
        'variables': [
            'choice',
            'choice_binary',
            'rt',
            'onset',
            'delay_days',
            'amount_small',
            'amount_large',
            'sv_chosen',
            'sv_unchosen',
            'sv_diff',
            'sv_sum',
            'later_delay',
            'discount_rate',
            'model_fit',
        ],
    },
    'mvpa': {
        'cv_folds': 5,
        'cv_shuffle': True,
        'cv_random_state': 42,
        'cv_strategy': 'stratified',
        'n_permutations': 1000,
        'perm_random_state': 42,
        'alpha': 0.05,
        'multiple_comparisons': 'fdr_bh',
        'classification': {
            'default_algorithm': 'svm',
            'algorithms': {
                'svm': {'C': 1.0, 'kernel': 'linear', 'class_weight': 'balanced'},
                'logistic': {
                    'C': 1.0,
                    'class_weight': 'balanced',
                    'solver': 'liblinear',
                },
                'random_forest': {
                    'n_estimators': 100,
                    'max_depth': 10,
                    'class_weight': 'balanced',
                },
            },
        },
        'regression': {
            'default_algorithm': 'ridge',
            'algorithms': {
                'ridge': {'alpha': 1.0, 'normalize': False},
                'lasso': {'alpha': 1.0, 'normalize': False},
                'elastic_net': {'alpha': 1.0, 'l1_ratio': 0.5, 'normalize': False},
            },
        },
        'feature_selection': {
            'enabled': False,
            'method': 'univariate',
            'n_features': 1000,
            'score_func': 'f_classif',
        },
        'data_preparation': {
            'standardize': True,
            'remove_mean': True,
            'variance_threshold': 1e-8,
        },
        'targets': {
            'classification': ['choice_binary'],
            'regression': [
                'sv_diff',
                'sv_sum',
                'sv_chosen',
                'sv_unchosen',
                'svchosen_unchosen',
                'later_delay',
                'discount_rate',
            ],
        },
        'quality_control': {
            'min_samples_per_class': 5,
            'min_trials_per_subject': 20,
            'max_missing_data': 0.1,
        },
    },
}
